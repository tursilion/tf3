* This is the loader for TF3 Music player
* It sets up bitmap mode, displays the SEGA logo,
* copies the program to 32K RAM, and then jumps to it.
* This goes on the first and last pages of the cart,
* which should cover most cold boot cases.

	AORG >6000
	
	DATA >AA01,>0100,>0000,LIST
	DATA >0000,>0000
LIST
	DATA >0000,START,>1154
	TEXT 'HUNDER FORCE III'
	
*
* SEGA logo - 5 frames. 12x4, starting at row 1, not 0
* fifth frame is back at row 1, but column 12.
****************************************
* Colorset Definitions                  
****************************************
COL0   DATA >1010,>1010,>1010,>1010    ;
COL1   DATA >4747,>47F7,>47F7,>47F7    ;
COL2   DATA >4040,>404F,>4040,>4040    ;
COL3   DATA >7474,>747F,>7FF4,>F4F4    ;
COL4   DATA >F4F4,>F4F4,>F474,>4747    ;
COL5   DATA >1440,>40F0,>4040,>4040    ;
COL6   DATA >7474,>F47F,>F4F7,>F4F7    ;
COL7   DATA >F4F4,>F44F,>F4F4,>F4F4    ;
COL8   DATA >4040,>40F0,>4040,>4040    ;
COL9   DATA >F1F1,>E1F1,>7115,>7115    ;
COL10  DATA >F4F4,>F4F4,>F4F4,>F4F4    ;
COL11  DATA >F4F4,>F4F4,>F4F4,>F4F4    ;
COL12  DATA >4F4F,>F41F,>10F1,>F1F1    ;
COL13  DATA >F4F4,>F4F4,>F4F4,>F4F4    ;
COL14  DATA >1440,>144F,>1440,>1440    ;
COL15  DATA >F4F4,>F44F,>4FF4,>F4F4    ;
COL16  DATA >F4F4,>F4F4,>F4F4,>F4F4    ;
COL17  DATA >1414,>41F0,>1414,>1440    ;
COL18  DATA >F4F4,>F44F,>F4F4,>F4F4    ;
COL19  DATA >1440,>41F0,>1440,>4140    ;
COL20  DATA >F1F1,>F1F1,>F115,>F115    ;
COL21  DATA >F4F4,>F4F4,>F1F4,>E4F4    ;
COL22  DATA >1F4F,>F11F,>10F1,>F1F1    ;
COL23  DATA >F7F7,>F0F7,>F7F7,>F7F0    ;
COL24  DATA >7447,>4F47,>7447,>47F0    ;
COL25  DATA >4774,>74F4,>F417,>F1F1    ;
COL26  DATA >47F7,>F770,>4770,>F71F    ;
COL27  DATA >7474,>F040,>7474,>74F0    ;
COL28  DATA >4747,>7F47,>4774,>F41F    ;
COL29  DATA >47F7,>7F47,>4747,>47F0    ;
COL30  DATA >F4F4,>4F74,>7474,>74F0    ;
COL31  DATA >4747,>4747,>4747,>47F0    ;
COL32  DATA >4747,>7F47,>F7F7,>F7F0    ;
COL33  DATA >F4F4,>4F40,>4040,>74F0    ;
COL34  DATA >4114,>1414,>1414,>141F    ;
COL35  DATA >4747,>F047,>4747,>47F0    ;
COL36  DATA >40F4,>4F40,>4040,>40F0    ;
COL37  DATA >F474,>74F4,>74F1,>F1F1    ;
COL38  DATA >F4F4,>F474,>7474,>F41F    ;
COL39  DATA >1440,>F040,>4040,>40F0    ;
COL40  DATA >7474,>7FF4,>47F4,>F11F    ;
COL41  DATA >F4F4,>4F40,>7474,>74F0    ;
COL42  DATA >F4F4,>4F14,>1440,>40F0    ;
COL43  DATA >7474,>7474,>7447,>74F0    ;
COL44  DATA >F4F4,>4FF4,>F4F4,>F4F0    ;
COL45  DATA >E4F4,>4F40,>1440,>14F0    ;
COL46  DATA >F114,>4114,>4114,>411F    ;
COL47  DATA >F7F7,>F7F7,>F7F7,>F7F7    ;
COL48  DATA >7447,>477F,>4770,>4770    ;
COL49  DATA >7474,>747F,>7FF7,>F4F7    ;
COL50  DATA >F7F7,>F7F7,>F7F7,>F7F7    ;
COL51  DATA >7474,>74F0,>7447,>4747    ;
COL52  DATA >4747,>477F,>F7F7,>F7F7    ;
COL53  DATA >4747,>477F,>F7F7,>F7F7    ;
COL54  DATA >7474,>74F0,>7474,>7474    ;
COL55  DATA >F1F1,>171F,>F117,>1717    ;
COL56  DATA >F7F7,>47F7,>F7F7,>F7F7    ;
COL57  DATA >F4F4,>F4F4,>F447,>F447    ;
COL58  DATA >4747,>F047,>4747,>47F0    ;
COL59  DATA >47F7,>7F70,>4770,>47F0    ;
COL60  DATA >47F7,>4717,>1717,>E1F1    ;
COL61  DATA >47F7,>F747,>4747,>F71F    ;
COL62  DATA >4747,>F070,>7070,>70F0    ;
COL63  DATA >7447,>7FF4,>F747,>171F    ;
COL64  DATA >F7F7,>7F70,>4770,>47F0    ;
COL65  DATA >4747,>7F47,>4747,>70F0    ;
COL66  DATA >74F7,>7474,>7474,>74F0    ;
COL67  DATA >F7F7,>7FF7,>F7F7,>F7F0    ;
COL68  DATA >47F7,>7F47,>4770,>47F0    ;
COL69  DATA >1515,>1715,>1517,>171F    ;
COL70  DATA >47F4,>47F4,>F4F4,>F4F4    ;
COL71  DATA >4770,>477F,>4770,>4747    ;
COL72  DATA >4747,>474F,>4FF7,>F447    ;
COL73  DATA >7447,>74F7,>7447,>7474    ;
COL74  DATA >4770,>70F0,>4770,>4770    ;
COL75  DATA >4747,>474F,>F4F4,>F44F    ;
COL76  DATA >F7F7,>477F,>F747,>4747    ;
COL77  DATA >7070,>70F0,>4770,>7070    ;
COL78  DATA >F1F1,>17F1,>1717,>1717    ;
COL79  DATA >F7F7,>47F7,>4747,>4747    ;
COL80  DATA >F7F7,>F7F7,>F7F7,>F7F7    ;
COL81  DATA >4F7F,>471F,>10F1,>F1F1    ;
COL82  DATA >F4F4,>F0F4,>F4F4,>F4F0    ;
COL83  DATA >74F4,>7F40,>7474,>74F0    ;
COL84  DATA >4747,>7417,>7417,>F1F1    ;
COL85  DATA >F4F4,>F440,>4040,>F41F    ;
COL86  DATA >4774,>F074,>7474,>74F0    ;
COL87  DATA >4747,>4F47,>7447,>171F    ;
COL88  DATA >74F4,>4F40,>7440,>40F0    ;
COL89  DATA >47F7,>7F47,>4774,>74F0    ;
COL90  DATA >F474,>7474,>7474,>74F0    ;
COL91  DATA >47F4,>4FF4,>F4F4,>F4F0    ;
COL92  DATA >47F7,>7F47,>4747,>47F0    ;
COL93  DATA >1717,>1717,>1717,>171F    ;
COL94  DATA >7440,>744F,>4040,>4040    ;
COL95  DATA >7474,>744F,>4FF4,>F4F4    ;
COL96  DATA >7474,>74F0,>7474,>7440    ;
COL97  DATA >7447,>744F,>F4F4,>F4F4    ;
COL98  DATA >74F4,>F44F,>F4F4,>F4F4    ;
COL99  DATA >7440,>74F0,>7474,>7474    ;
COL100 DATA >F171,>F1F1,>F115,>F115    ;
COL101 DATA >4747,>4747,>7474,>74F4    ;
COL102 DATA >7F7F,>171F,>10F1,>F1F1    ;
COL103 DATA >F4F4,>F0F4,>F4F4,>14F0    ;
COL104 DATA >14F4,>4F40,>1440,>14F0    ;
COL105 DATA >F4F4,>F4F4,>F4F1,>F1F1    ;
COL106 DATA >E4F4,>F414,>1414,>F41F    ;
COL107 DATA >7440,>F040,>1440,>14F0    ;
COL108 DATA >F4F4,>4FF4,>F4F4,>F41F    ;
COL109 DATA >F4F4,>4F14,>1414,>41F0    ;
COL110 DATA >74F4,>4F40,>7440,>40F0    ;
COL111 DATA >F4F4,>14F4,>F4F4,>F4F0    ;
COL112 DATA >F4F4,>4F40,>4040,>40F0    ;
COL113 DATA >1517,>1515,>1515,>141F    ;
COL114 DATA >10F1,>1515,>74F4,>F4F4    ;
COL115 DATA >10F0,>4040,>4040,>F040    ;
COL116 DATA >101F,>14F4,>F4F4,>4FF4    ;
COL117 DATA >101F,>F440,>4074,>F4F4    ;
COL118 DATA >10F0,>4040,>1440,>F040    ;
COL119 DATA >101F,>F1F4,>F4F4,>4FF4    ;
COL120 DATA >10F0,>4040,>1440,>4FF4    ;
COL121 DATA >10F0,>4040,>1440,>F040    ;
COL122 DATA >10F1,>F1F1,>F1F1,>F1F1    ;
COL123 DATA >10F1,>F114,>F4F4,>F4F4    ;
COL124 DATA >10F1,>F1F4,>F4F4,>F4F4    ;
COL125 DATA >101F,>F14F,>F14F,>F14F    ;
COL126 DATA >10F1,>F114,>F4F4,>F4F4    ;
COL127 DATA >10F0,>1440,>1440,>F040    ;
COL128 DATA >101F,>F1F4,>F4F4,>4FF4    ;
COL129 DATA >101F,>F414,>1440,>F4F4    ;
COL130 DATA >10F0,>1414,>1414,>F014    ;
COL131 DATA >10F0,>1440,>4140,>4FF4    ;
COL132 DATA >10F0,>1440,>4140,>F014    ;
COL133 DATA >10F1,>F1F1,>F4F4,>F1F4    ;
COL134 DATA >101F,>F44F,>F44F,>F41F    ;
COL135 DATA >7417,>1717,>F1F0,>F7F7    ;
COL136 DATA >4FF4,>7440,>744F,>7474    ;
COL137 DATA >7474,>4747,>4747,>4747    ;
COL138 DATA >7F47,>7447,>74F7,>4747    ;
COL139 DATA >F040,>4040,>40F0,>7474    ;
COL140 DATA >7FF7,>47F7,>477F,>4747    ;
COL141 DATA >4FF4,>F4F4,>477F,>7447    ;
COL142 DATA >4FF4,>F4F4,>F4F4,>F4F4    ;
COL143 DATA >1717,>1747,>1747,>47F7    ;
COL144 DATA >F4F4,>7474,>F4F4,>7474    ;
COL145 DATA >F4F4,>F4F4,>F4F4,>F4F4    ;
COL146 DATA >F1F1,>F141,>F141,>1414    ;
COL147 DATA >F4F4,>1414,>F1F0,>F4F4    ;
COL148 DATA >4FF4,>4040,>404F,>4040    ;
COL149 DATA >F4F4,>F4F4,>F4F4,>F4F4    ;
COL150 DATA >4FF4,>F4F4,>F4F4,>F4F4    ;
COL151 DATA >F040,>1440,>14F0,>1440    ;
COL152 DATA >4FF4,>F4F4,>F44F,>F4F4    ;
COL153 DATA >4FF4,>F4F4,>F44F,>F4F4    ;
COL154 DATA >F4F4,>F4F4,>F4F4,>F4F4    ;
COL155 DATA >F4F4,>F4F4,>F4F4,>F4F4    ;
COL156 DATA >F4F4,>E4F4,>E4F4,>F4F4    ;
COL157 DATA >F1F1,>F1F1,>F1F1,>F114    ;
COL158 DATA >10F1,>1717,>1717,>F7F7    ;
COL159 DATA >10F0,>7447,>7447,>F047    ;
COL160 DATA >101F,>14F4,>F4F4,>7F47    ;
COL161 DATA >101F,>4747,>4747,>F747    ;
COL162 DATA >10F0,>7447,>7474,>F074    ;
COL163 DATA >101F,>F474,>4747,>7F47    ;
COL164 DATA >10F0,>7447,>4747,>7F47    ;
COL165 DATA >10F0,>7474,>7474,>F074    ;
COL166 DATA >10F1,>F171,>F171,>F1E1    ;
COL167 DATA >10F1,>7117,>7447,>47F7    ;
COL168 DATA >101F,>F44F,>F44F,>F44F    ;
COL169 DATA >1717,>1717,>17F0,>F7F7    ;
COL170 DATA >7FF7,>7070,>707F,>7070    ;
COL171 DATA >4747,>47F7,>47F7,>F7F7    ;
COL172 DATA >7FF7,>F7F7,>F7F7,>F7F7    ;
COL173 DATA >F047,>4747,>47F0,>4747    ;
COL174 DATA >7FF7,>F7F7,>F77F,>7447    ;
COL175 DATA >7FF7,>F7F7,>F77F,>F7F7    ;
COL176 DATA >7F47,>4747,>4747,>4747    ;
COL177 DATA >1717,>1717,>4717,>F7F7    ;
COL178 DATA >F7F7,>F7F7,>F7F7,>F7F7    ;
COL179 DATA >7447,>7447,>7447,>4747    ;
COL180 DATA >F171,>F151,>5151,>1517    ;
COL181 DATA >10F1,>1717,>7447,>47F4    ;
COL182 DATA >10F0,>7070,>4770,>F070    ;
COL183 DATA >101F,>1717,>F7F7,>4F47    ;
COL184 DATA >101F,>F770,>4747,>F4F7    ;
COL185 DATA >10F0,>7070,>4770,>F070    ;
COL186 DATA >101F,>1717,>F7F7,>4F47    ;
COL187 DATA >10F0,>5770,>4770,>7FF7    ;
COL188 DATA >10F0,>7070,>7070,>F070    ;
COL189 DATA >10F1,>7171,>7171,>F1F1    ;
COL190 DATA >10F1,>1717,>17F7,>F7F7    ;
COL191 DATA >10F1,>1E17,>F7F7,>F7F7    ;
COL192 DATA >F4F4,>1514,>F1F0,>F4F4    ;
COL193 DATA >7F74,>7447,>747F,>7474    ;
COL194 DATA >4747,>4747,>4747,>4747    ;
COL195 DATA >4FF4,>74F4,>74F4,>F4F4    ;
COL196 DATA >F047,>4770,>47F0,>4747    ;
COL197 DATA >4FF4,>F44F,>F44F,>4747    ;
COL198 DATA >4FF7,>F447,>474F,>47F4    ;
COL199 DATA >7FF7,>F7F7,>F7F7,>F7F7    ;
COL200 DATA >F474,>1774,>F474,>F4F4    ;
COL201 DATA >7447,>4774,>F4F4,>74F4    ;
COL202 DATA >F7F7,>F7F7,>47F7,>F7F7    ;
COL203 DATA >7171,>7171,>7171,>1717    ;
COL204 DATA >10F1,>1514,>F4F4,>F4F4    ;
COL205 DATA >10F0,>7440,>7474,>F040    ;
COL206 DATA >101F,>1717,>7447,>4F74    ;
COL207 DATA >101F,>F474,>7440,>F4F4    ;
COL208 DATA >10F0,>7474,>7474,>F074    ;
COL209 DATA >101F,>1747,>7447,>4F47    ;
COL210 DATA >10F0,>7440,>7440,>4FF4    ;
COL211 DATA >10F0,>7474,>7474,>F074    ;
COL212 DATA >10F1,>7171,>F171,>F1E1    ;
COL213 DATA >10F1,>7115,>F4F4,>F4F4    ;
COL214 DATA >10F1,>F117,>F7F7,>7447    ;
COL215 DATA >101F,>177F,>F77F,>F77F    ;
COL216 DATA >F4F4,>4114,>F1F0,>F4F4    ;
COL217 DATA >4FF4,>F4F4,>E4F4,>E4F4    ;
COL218 DATA >F074,>7440,>74F0,>7440    ;
COL219 DATA >4FF4,>74F4,>74F4,>F4F4    ;
COL220 DATA >F4F4,>F4F4,>F4F4,>E4F4    ;
COL221 DATA >74F4,>74F4,>74F4,>F4F4    ;
COL222 DATA >7171,>7171,>7151,>1715    ;
****************************************
* Character Patterns                    
****************************************
PAT0   DATA >FFFF,>FFFF,>FFFF,>FFFF    ;
PAT1   DATA >2B19,>2B84,>2A84,>2B82    ;
PAT2   DATA >FFFF,>FFC0,>FFFF,>FFFF    ;
PAT3   DATA >0506,>0503,>033C,>1D0C    ;
PAT4   DATA >1010,>1011,>10B0,>2B27    ;
PAT5   DATA >80FF,>FFFF,>FFFF,>FFFF    ;
PAT6   DATA >151A,>100F,>7070,>7070    ;
PAT7   DATA >8080,>8078,>8484,>8484    ;
PAT8   DATA >FFFF,>FFFF,>FFFF,>FFFF    ;
PAT9   DATA >4141,>43C2,>4338,>4738    ;
PAT10  DATA >0304,>0404,>0808,>0810    ;
PAT11  DATA >0282,>8181,>4140,>4020    ;
PAT12  DATA >4A86,>8203,>FF80,>8080    ;
PAT13  DATA >8484,>8484,>8484,>8482    ;
PAT14  DATA >8AFF,>0AC0,>08FF,>02FF    ;
PAT15  DATA >0404,>0403,>033C,>1C0C    ;
PAT16  DATA >1010,>1011,>1010,>1010    ;
PAT17  DATA >A801,>55FF,>0840,>2AFF    ;
PAT18  DATA >1010,>100F,>7070,>7070    ;
PAT19  DATA >8AFF,>55FF,>88FF,>55FF    ;
PAT20  DATA >4141,>42C2,>4238,>4438    ;
PAT21  DATA >0282,>8181,>4140,>4020    ;
PAT22  DATA >4A86,>8203,>FF80,>8080    ;
PAT23  DATA >8080,>FF80,>8080,>80FF    ;
PAT24  DATA >541C,>010F,>5505,>2BFF    ;
PAT25  DATA >7807,>070A,>0B4E,>6080    ;
PAT26  DATA >8A08,>07FF,>0AFF,>C0C0    ;
PAT27  DATA >4020,>FFFF,>50A0,>54FF    ;
PAT28  DATA >E0E0,>07E0,>E017,>130F    ;
PAT29  DATA >2A60,>E013,>8A01,>0AFF    ;
PAT30  DATA >0808,>0780,>4020,>50FF    ;
PAT31  DATA >8880,>C0C0,>C0C0,>C0FF    ;
PAT32  DATA >2B0D,>7017,>1818,>38FF    ;
PAT33  DATA >0404,>03FF,>FFFF,>40FF    ;
PAT34  DATA >7007,>0707,>0303,>0303    ;
PAT35  DATA >2B1D,>FF0F,>2A07,>2AFF    ;
PAT36  DATA >FF01,>01FF,>FFFF,>FFFF    ;
PAT37  DATA >8406,>050A,>0B11,>6080    ;
PAT38  DATA >1008,>07A0,>5080,>C0C0    ;
PAT39  DATA >08FF,>FFFF,>FFFF,>FFFF    ;
PAT40  DATA >151A,>0718,>E014,>130F    ;
PAT41  DATA >8060,>E0FF,>4020,>50FF    ;
PAT42  DATA >0808,>0701,>08FF,>FFFF    ;
PAT43  DATA >5472,>1539,>15C4,>15FF    ;
PAT44  DATA >8080,>7008,>1818,>38FF    ;
PAT45  DATA >0404,>03FF,>08FF,>02FF    ;
PAT46  DATA >1007,>5807,>5C03,>5C03    ;
PAT47  DATA >8484,>8484,>8484,>8482    ;
PAT48  DATA >5501,>0AC0,>0AFF,>02FF    ;
PAT49  DATA >4707,>4703,>033C,>1D0C    ;
PAT50  DATA >1010,>1011,>1010,>1010    ;
PAT51  DATA >541E,>55FF,>5578,>2A3C    ;
PAT52  DATA >E0E0,>E00F,>7070,>7070    ;
PAT53  DATA >0A07,>0278,>8484,>8484    ;
PAT54  DATA >5578,>55FF,>553C,>551E    ;
PAT55  DATA >4141,>3C3C,>4338,>3838    ;
PAT56  DATA >0304,>0A04,>0808,>0810    ;
PAT57  DATA >0282,>8181,>4117,>4015    ;
PAT58  DATA >2864,>FF70,>2A58,>2AFF    ;
PAT59  DATA >8001,>01FF,>80FF,>80FF    ;
PAT60  DATA >2A04,>0B04,>040E,>E080    ;
PAT61  DATA >A808,>0750,>88C0,>C0C0    ;
PAT62  DATA >0801,>FFFF,>FFFF,>FFFF    ;
PAT63  DATA >55C8,>0718,>186A,>0C0F    ;
PAT64  DATA >8060,>E0FF,>A8FF,>A0FF    ;
PAT65  DATA >0207,>0703,>0801,>FFFF    ;
PAT66  DATA >5540,>450F,>5523,>55FF    ;
PAT67  DATA >8080,>7008,>1818,>38FF    ;
PAT68  DATA >8A04,>0301,>0AFF,>02FF    ;
PAT69  DATA >0F07,>2707,>0303,>2B03    ;
PAT70  DATA >6884,>6A84,>8484,>8482    ;
PAT71  DATA >88FF,>A0C0,>A8FF,>A840    ;
PAT72  DATA >0A03,>0303,>033C,>5C03    ;
PAT73  DATA >17C4,>5511,>15C8,>151B    ;
PAT74  DATA >08FF,>FFFF,>80FF,>80FF    ;
PAT75  DATA >8A0F,>0A0F,>7070,>700F    ;
PAT76  DATA >8080,>2878,>8460,>2A70    ;
PAT77  DATA >FFFF,>FFFF,>08FF,>FFFF    ;
PAT78  DATA >41C1,>3CC2,>3C38,>3A38    ;
PAT79  DATA >0304,>A004,>A0C0,>A0E0    ;
PAT80  DATA >0282,>8181,>4140,>4020    ;
PAT81  DATA >4A86,>2903,>FF80,>8080    ;
PAT82  DATA >8080,>FF80,>8080,>80FF    ;
PAT83  DATA >1501,>01FF,>0502,>05FF    ;
PAT84  DATA >0B43,>5C05,>5A0E,>6080    ;
PAT85  DATA >1008,>07FF,>FFFF,>C0C0    ;
PAT86  DATA >A81B,>FF0F,>5527,>15FF    ;
PAT87  DATA >0F0F,>0707,>780B,>0C0F    ;
PAT88  DATA >8560,>E0FF,>01FF,>FFFF    ;
PAT89  DATA >A008,>07C0,>A81B,>55FF    ;
PAT90  DATA >40C0,>C0C1,>C1C1,>C1FF    ;
PAT91  DATA >6A80,>7008,>1818,>38FF    ;
PAT92  DATA >A804,>0380,>A840,>A8FF    ;
PAT93  DATA >0F07,>0707,>0303,>0303    ;
PAT94  DATA >01FF,>01C0,>FFFF,>FFFF    ;
PAT95  DATA >541C,>5403,>033C,>1C0C    ;
PAT96  DATA >4121,>50FF,>1020,>14FF    ;
PAT97  DATA >500F,>500F,>7070,>7070    ;
PAT98  DATA >8580,>8078,>8484,>8484    ;
PAT99  DATA >05FF,>05FF,>4102,>4180    ;
PAT100 DATA >41C1,>42C2,>4238,>4438    ;
PAT101 DATA >A850,>2A78,>5563,>5520    ;
PAT102 DATA >4A86,>0103,>FF80,>8080    ;
PAT103 DATA >8080,>FF80,>8080,>2AFF    ;
PAT104 DATA >8801,>01FF,>88FF,>A8FF    ;
PAT105 DATA >8404,>040A,>0A11,>6080    ;
PAT106 DATA >1008,>0750,>8840,>C0C0    ;
PAT107 DATA >01FF,>FFFF,>80FF,>80FF    ;
PAT108 DATA >1010,>0718,>1814,>130F    ;
PAT109 DATA >8060,>E040,>8840,>55FF    ;
PAT110 DATA >0D08,>07FF,>01FF,>FFFF    ;
PAT111 DATA >4040,>2A01,>0101,>01FF    ;
PAT112 DATA >0404,>03FF,>FFFF,>FFFF    ;
PAT113 DATA >0F07,>0707,>0303,>0303    ;
PAT114 DATA >FF07,>E0C0,>5040,>8182    ;
PAT115 DATA >FFFF,>FFFF,>FFFF,>FFFF    ;
PAT116 DATA >FF03,>2305,>0606,>0304    ;
PAT117 DATA >FFC0,>C0FF,>FF80,>0708    ;
PAT118 DATA >FFFF,>FFFF,>02FF,>FFFF    ;
PAT119 DATA >FF0F,>1314,>1818,>0F10    ;
PAT120 DATA >FFFF,>FFFF,>08FF,>E060    ;
PAT121 DATA >FFFF,>FFFF,>08FF,>FFFF    ;
PAT122 DATA >FFC0,>4040,>4040,>C041    ;
PAT123 DATA >FF07,>18C0,>4080,>8003    ;
PAT124 DATA >FF80,>6112,>0E06,>0602    ;
PAT125 DATA >FF03,>0286,>854A,>8552    ;
PAT126 DATA >FF07,>18C0,>4040,>8182    ;
PAT127 DATA >FFFF,>0AFF,>8AFF,>FFFF    ;
PAT128 DATA >FF03,>0405,>0606,>0304    ;
PAT129 DATA >FFC0,>C005,>08FF,>0708    ;
PAT130 DATA >FFFF,>0A01,>8A04,>FF01    ;
PAT131 DATA >FFFF,>28FF,>55FF,>E060    ;
PAT132 DATA >FFFF,>2AFF,>55FF,>FF01    ;
PAT133 DATA >FF80,>6112,>0E06,>0602    ;
PAT134 DATA >FF03,>0286,>854A,>8552    ;
PAT135 DATA >5580,>C0C0,>1DFF,>8080    ;
PAT136 DATA >0101,>40FF,>500F,>50C0    ;
PAT137 DATA >0F07,>7878,>7878,>7878    ;
PAT138 DATA >E04D,>5507,>5511,>2B03    ;
PAT139 DATA >FFFF,>FFFF,>FFFF,>4080    ;
PAT140 DATA >0F70,>8270,>8A0F,>E0E0    ;
PAT141 DATA >7884,>8484,>2B78,>C40F    ;
PAT142 DATA >0708,>0808,>0808,>0808    ;
PAT143 DATA >B0B0,>B0A1,>A0A0,>8260    ;
PAT144 DATA >1010,>70A0,>2343,>54E0    ;
PAT145 DATA >2020,>1010,>1008,>0808    ;
PAT146 DATA >4040,>40E0,>20E0,>0F0F    ;
PAT147 DATA >4140,>C0C0,>1DFF,>8080    ;
PAT148 DATA >0101,>FFFF,>FF0F,>FFFF    ;
PAT149 DATA >0C04,>8484,>8484,>8484    ;
PAT150 DATA >E010,>1010,>1011,>1010    ;
PAT151 DATA >FFFF,>0AFF,>0AFF,>02FF    ;
PAT152 DATA >0F70,>7070,>700F,>1010    ;
PAT153 DATA >7884,>8484,>8478,>8080    ;
PAT154 DATA >4848,>4850,>5050,>6060    ;
PAT155 DATA >1010,>2020,>2343,>4040    ;
PAT156 DATA >2020,>1010,>1008,>0808    ;
PAT157 DATA >4040,>4020,>2020,>100F    ;
PAT158 DATA >FF07,>E0C0,>8080,>8182    ;
PAT159 DATA >FFFF,>540F,>5507,>FF03    ;
PAT160 DATA >FF03,>0305,>0706,>0378    ;
PAT161 DATA >FFC0,>0A0F,>0A05,>0703    ;
PAT162 DATA >FFFF,>500F,>5078,>FF3C    ;
PAT163 DATA >FF0F,>1317,>E0E0,>0FE0    ;
PAT164 DATA >FFFF,>5578,>2A1C,>E01E    ;
PAT165 DATA >FFFF,>5080,>54A0,>FFE0    ;
PAT166 DATA >FFC0,>40C0,>40C0,>C0C1    ;
PAT167 DATA >FF07,>1DC0,>5103,>2A03    ;
PAT168 DATA >FF03,>0286,>854A,>8552    ;
PAT169 DATA >8080,>C0C0,>E0FF,>8080    ;
PAT170 DATA >0101,>FFFF,>FF0F,>FFFF    ;
PAT171 DATA >A018,>2A84,>2A84,>8484    ;
PAT172 DATA >E010,>1010,>1011,>1010    ;
PAT173 DATA >FF1E,>0A07,>0AFF,>0203    ;
PAT174 DATA >0F70,>7070,>700F,>55C0    ;
PAT175 DATA >7884,>8484,>8478,>8080    ;
PAT176 DATA >0754,>2230,>A214,>0206    ;
PAT177 DATA >B030,>3020,>A820,>6060    ;
PAT178 DATA >1010,>2020,>2343,>4040    ;
PAT179 DATA >700D,>5507,>5503,>2201    ;
PAT180 DATA >40C0,>40E0,>E0E0,>0F0F    ;
PAT181 DATA >FF07,>E0C0,>5598,>2A82    ;
PAT182 DATA >FFFF,>FFFF,>80FF,>FFFF    ;
PAT183 DATA >FF03,>0302,>0606,>0303    ;
PAT184 DATA >FFC0,>C0FF,>A880,>0708    ;
PAT185 DATA >FFFF,>FFFF,>08FF,>FFFF    ;
PAT186 DATA >FF0F,>0C08,>1818,>0F06    ;
PAT187 DATA >FFFF,>80FF,>80FF,>E060    ;
PAT188 DATA >FFFF,>FFFF,>FFFF,>FFFF    ;
PAT189 DATA >FFC0,>C0C0,>C0C0,>C0C1    ;
PAT190 DATA >FF07,>E0C0,>8080,>8003    ;
PAT191 DATA >FF80,>1E0C,>0E06,>0602    ;
PAT192 DATA >4140,>C0C0,>1DFF,>8080    ;
PAT193 DATA >011B,>5570,>550F,>5503    ;
PAT194 DATA >0303,>0303,>0303,>0303    ;
PAT195 DATA >E010,>1510,>1511,>1010    ;
PAT196 DATA >FF40,>A0FF,>A8FF,>A840    ;
PAT197 DATA >0F70,>700F,>700F,>0F0F    ;
PAT198 DATA >7884,>8450,>6A78,>6A80    ;
PAT199 DATA >0708,>0808,>0808,>0808    ;
PAT200 DATA >48C8,>32D0,>50D0,>60E0    ;
PAT201 DATA >55C0,>8A27,>2343,>5540    ;
PAT202 DATA >2020,>1010,>8008,>0808    ;
PAT203 DATA >C0C0,>C0E0,>E0E0,>0F0F    ;
PAT204 DATA >FF07,>E0C0,>4040,>8182    ;
PAT205 DATA >FFFF,>15FF,>0502,>FFFF    ;
PAT206 DATA >FF03,>0302,>5681,>033C    ;
PAT207 DATA >FFC0,>C002,>05FF,>0708    ;
PAT208 DATA >FFFF,>050F,>0507,>FF83    ;
PAT209 DATA >FF0F,>0C0B,>7807,>0F0F    ;
PAT210 DATA >FFFF,>50FF,>14FF,>E060    ;
PAT211 DATA >FFFF,>5507,>1523,>FF09    ;
PAT212 DATA >FFC0,>C0C0,>40C0,>C0C1    ;
PAT213 DATA >FF07,>1DC0,>4080,>8003    ;
PAT214 DATA >FF80,>610C,>0E06,>1760    ;
PAT215 DATA >FF03,>0186,>854A,>8552    ;
PAT216 DATA >4140,>35C0,>1CFF,>8080    ;
PAT217 DATA >E010,>1010,>1011,>1010    ;
PAT218 DATA >FF02,>05FF,>05FF,>01FF    ;
PAT219 DATA >0708,>5808,>1C08,>0808    ;
PAT220 DATA >1010,>2020,>2343,>4040    ;
PAT221 DATA >3520,>1510,>1508,>0808    ;
PAT222 DATA >C0C0,>C0E0,>60E0,>0F0F    ;
****************************************
* Map Data                              
****************************************
MCOUNT DATA 1                          ;
* == Map #0 ==                          
MC0    DATA 0                          ;
MS0    DATA >0020,>0018,>0300          ; Width, Height, Size
* -- Map Row 0 -- (removed, was emtpy)
MD0
* -- Map Row 1 --                       
       DATA >7273,>7475,>7677,>7879    ;
       DATA >7A7B,>7C7D,>7E7F,>8081    ;
       DATA >8277,>8384,>7A7B,>8586    ;
       DATA >0000,>0000,>0000,>0000    ;
* -- Map Row 2 --                       
       DATA >0102,>0304,>0506,>0708    ;
       DATA >090A,>0B0C,>0D0E,>0F10    ;
       DATA >1112,>0713,>140A,>1516    ;
       DATA >0000,>0000,>0000,>0000    ;
* -- Map Row 3 --                       
       DATA >8788,>898A,>8B8C,>8D8E    ;
       DATA >8F90,>9192,>9394,>9596    ;
       DATA >9798,>998E,>9A9B,>9C9D    ;
       DATA >0000,>0000,>0000,>0000    ;
* -- Map Row 4 --                       
       DATA >1718,>191A,>1B1C,>1D1E    ;
       DATA >1F20,>2122,>2324,>2526    ;
       DATA >2728,>292A,>2B2C,>2D2E    ;
       DATA >0000,>0000,>0000,>0000    ;
* -- Map Row 5 --                       
       DATA >9E9F,>A0A1,>A2A3,>A4A5    ;
       DATA >A6A7,>7CA8,>0000,>0000    ;
       DATA >0000,>0000,>0000,>0000    ;
       DATA >0000,>0000,>0000,>0000    ;
* -- Map Row 6 --                       
       DATA >2F30,>3132,>3334,>3536    ;
       DATA >3738,>390C,>0000,>0000    ;
       DATA >0000,>0000,>0000,>0000    ;
       DATA >0000,>0000,>0000,>0000    ;
* -- Map Row 7 --                       
       DATA >A9AA,>ABAC,>ADAE,>AFB0    ;
       DATA >B1B2,>B3B4,>0000,>0000    ;
       DATA >0000,>0000,>0000,>0000    ;
       DATA >0000,>0000,>0000,>0000    ;
* -- Map Row 8 --                       
       DATA >3A3B,>3C3D,>3E3F,>4041    ;
       DATA >4243,>4445,>0000,>0000    ;
       DATA >0000,>0000,>0000,>0000    ;
       DATA >0000,>0000,>0000,>0000    ;
* -- Map Row 9 --                       
       DATA >B5B6,>B7B8,>B9BA,>BBBC    ;
       DATA >BDBE,>BFA8,>0000,>0000    ;
       DATA >0000,>0000,>0000,>0000    ;
       DATA >0000,>0000,>0000,>0000    ;
* -- Map Row 10 --                      
       DATA >4647,>4849,>4A4B,>4C4D    ;
       DATA >4E4F,>5051,>0000,>0000    ;
       DATA >0000,>0000,>0000,>0000    ;
       DATA >0000,>0000,>0000,>0000    ;
* -- Map Row 11 --                      
       DATA >C0C1,>C2C3,>C4C5,>C6C7    ;
       DATA >C8C9,>CACB,>0000,>0000    ;
       DATA >0000,>0000,>0000,>0000    ;
       DATA >0000,>0000,>0000,>0000    ;
* -- Map Row 12 --                      
       DATA >5253,>5455,>5657,>5859    ;
       DATA >5A5B,>5C5D,>0000,>0000    ;
       DATA >0000,>0000,>0000,>0000    ;
       DATA >0000,>0000,>0000,>0000    ;
* -- Map Row 13 --                      
       DATA >CCCD,>CECF,>D0D1,>D2D3    ;
       DATA >D4D5,>D6D7,>0000,>0000    ;
       DATA >0000,>0000,>0000,>0000    ;
       DATA >0000,>0000,>0000,>0000    ;
* -- Map Row 14 --                      
       DATA >0D5E,>5F10,>6061,>6263    ;
       DATA >640A,>6566,>0000,>0000    ;
       DATA >0000,>0000,>0000,>0000    ;
       DATA >0000,>0000,>0000,>0000    ;
* -- Map Row 15 --                      
       DATA >D894,>95D9,>DA98,>99DB    ;
       DATA >9ADC,>DDDE,>0000,>0000    ;
       DATA >0000,>0000,>0000,>0000    ;
       DATA >0000,>0000,>0000,>0000    ;
* -- Map Row 16 --                      
       DATA >6768,>696A,>6B6C,>6D6E    ;
       DATA >6F2C,>7071,>0000,>0000    ;
       DATA >0000,>0000,>0000,>0000    ;
       DATA >0000,>0000,>0000,>0000    ;

* as listed, characters from 64 to 85 only (alphabet)
* space is @, period is H, and Q is Y. Not available:
* H,J,K,V,W,X,Z
* HAND EDITED FOR LABELS, SO THEY DON'T CONFLICT
****************************************
* CLICorset Definitions                  
****************************************
CLIC64  DATA >1010,>1010,>1010,>1010    ;
CLIC65  DATA >1F1F,>1F1F,>1F1F,>1F10    ;
CLIC66  DATA >1F1F,>1F1F,>1F1F,>1F10    ;
CLIC67  DATA >1F1F,>1FF1,>1F1F,>1F10    ;
CLIC68  DATA >1F1F,>1F1F,>1F1F,>1F10    ;
CLIC69  DATA >1FF1,>F11F,>F1F1,>1F10    ;
CLIC70  DATA >1FF1,>F11F,>F1F1,>F110    ;
CLIC71  DATA >1F1F,>F11F,>1F1F,>1F10    ;
CLIC72  DATA >1010,>1010,>10F1,>F110    ;
CLIC73  DATA >F1F1,>F1F1,>F1F1,>F110    ;
CLIC74  DATA >1010,>1010,>1010,>1010    ;
CLIC75  DATA >1010,>1010,>1010,>1010    ;
CLIC76  DATA >F1F1,>F1F1,>F1F1,>1F10    ;
CLIC77  DATA >1F1F,>1F1F,>1F1F,>1F10    ;
CLIC78  DATA >1F1F,>1F1F,>1F1F,>1F10    ;
CLIC79  DATA >1F1F,>1F1F,>1F1F,>1F10    ;
CLIC80  DATA >1F1F,>1F1F,>F1F1,>F110    ;
CLIC81  DATA >1F1F,>1FF1,>F1F1,>F110    ;
CLIC82  DATA >1F1F,>1F1F,>1F1F,>1F10    ;
CLIC83  DATA >1F1F,>F11F,>F11F,>1F10    ;
CLIC84  DATA >1FF1,>F1F1,>F1F1,>F110    ;
CLIC85  DATA >1F1F,>1F1F,>1F1F,>1F10    ;
****************************************
* Character PLICterns                    
****************************************
PLIC64  DATA >FFFF,>FFFF,>FFFF,>FFFF    ;
PLIC65  DATA >8339,>3939,>0139,>39FF    ;
PLIC66  DATA >0339,>3903,>3939,>03FF    ;
PLIC67  DATA >0139,>39C0,>3939,>01FF    ;
PLIC68  DATA >0339,>3939,>3939,>03FF    ;
PLIC69  DATA >01C0,>C003,>C0C0,>01FF    ;
PLIC70  DATA >01C0,>C003,>C0C0,>C0FF    ;
PLIC71  DATA >0139,>C031,>3939,>01FF    ;
PLIC72  DATA >FFFF,>FFFF,>FF60,>60FF    ;
PLIC73  DATA >3838,>3838,>3838,>38FF    ;
PLIC74  DATA >0004,>0404,>0404,>4438    ;
PLIC75  DATA >0044,>4850,>6050,>4844    ;
PLIC76  DATA >6060,>6060,>6060,>81FF    ;
PLIC77  DATA >3911,>0129,>3939,>39FF    ;
PLIC78  DATA >3919,>0921,>3139,>39FF    ;
PLIC79  DATA >0139,>3939,>3939,>01FF    ;
PLIC80  DATA >0139,>3901,>C0C0,>C0FF    ;
PLIC81  DATA >3939,>396C,>3838,>38FF    ;
PLIC82  DATA >0139,>3903,>3939,>39FF    ;
PLIC83  DATA >0139,>C001,>0639,>01FF    ;
PLIC84  DATA >0138,>3838,>3838,>38FF    ;
PLIC85  DATA >3939,>3939,>3939,>01FF    ;

* output string (inset by 4):
LICTXT TEXT '    NOT@LICENSED@OR@ENDORSED    '
	   TEXT '    BQ@SEGA@ENTERPRISES@LTDH    '

* registers for bitmap (and 5B00 is the address of the sprite table)
* background is black. The REG9938 cover the 9938's extra 8 registers
* and should make the code compatible.
* PDT - >0000
* SIT - >1800
* SDT - >1800
* CT  - >2000
* SAL - >1B00
REG9938 DATA >8808,>8900,>8A00,>8B00,>8C00,>8D00,>8E00,>8F00
BMREGS DATA >81A2,>8002,>8206,>83ff,>8403,>8536,>8603,>8701,>5B00,>0000

*****************
**	
* VDP access
*
* Raw versions assume address is preswapped and pre-masked,
* and do not attempt to preserve the value in R0
*

BIT01  DATA >0001
QUITK  DATA >1100				* CRU value for QUIT

**
* VSBR - Read single byte at R0 into MSB R1
VSBR	
	SWPB R0
VSBRRAW
	MOVB R0,@>8C02
	SWPB R0
	MOVB R0,@>8C02		* set address
	MOVB @>8800,R1		* read byte
	B *R11

**
* VMBR - Read R2 bytes from VDP R0 to CPU R1
* Destroys R1,R2
VMBR
	SWPB R0
VMBRRAW
	MOVB R0,@>8C02
	SWPB R0
	MOVB R0,@>8C02		* set address
	COC @BIT01,R2		* check if odd
	JNE VMBRLP			* jump if not
	MOVB @>8800,*R1+	* read one byte
	DEC R2				* count down
	JEQ VMBREX			* jump ahead to exit if zero
VMBRLP
	MOVB @>8800,*R1+	* read two bytes
	MOVB @>8800,*R1+
	DECT R2				* count down by two
	JNE VMBRLP			* loop till finished
VMBREX
	B *R11				* return
	
**
* VSBW - Write single byte to R0 from MSB R1
* Destroys R0 (actually just oRs it)
VSBW
	ORI R0,>4000		* mask in write bit
	SWPB R0
VSBWRAW
	MOVB R0,@>8C02
	SWPB R0
	MOVB R0,@>8C02		* write address
	MOVB R1,@>8C00		* write data
	B *R11

**
* V2BW - Write two bytes to R0 from R1
* Destroys R0 (actually just oRs it)
V2BW
	ORI R0,>4000
	SWPB R0
V2BWRAW
	MOVB R0,@>8C02
	SWPB R0
	MOVB R0,@>8C02		* set address
	MOVB R1,@>8C00		* write data 1
	SWPB R1
	MOVB R1,@>8C00		* write data 2
	B *R11

**
* V2BR - Reads two bytes from R0 to R1
V2BR
	SWPB R0
V2BRRAW
	MOVB R0,@>8C02
	SWPB R0
	MOVB R0,@>8C02		* set address
	MOV R0,R0			* delay
	MOVB @>8800,R1		* read first byte
	SWPB R1
	MOVB @>8800,R1		* read second byte
	SWPB R1
	B *R11

**
* VMBW - Write R2 bytes from CPU R1 to VDP R0
* Destroys R0,R1,R2
VMBW
	ORI R0,>4000
	SWPB R0
VMBWRAW
	MOVB R0,@>8C02
	SWPB R0
	MOVB R0,@>8C02		* set address
	COC @BIT01,R2		* Check for odd length
	JNE VMBWLP			* jump to x2 loop if not odd
	MOVB *R1+,@>8C00	* copy one byte
	DEC R2				* count down
	JEQ VMBWEX			* jump to exit if done
VMBWLP
	MOVB *R1+,@>8C00	* write one byte
	MOVB *R1+,@>8C00	* write two bytes
	DECT R2				* count down
	JNE VMBWLP			* loop till finished
VMBWEX
	B *R11
	
**
* VMBS - Set R2 bytes from R1 MSB to VDP R0
* Destroys R0,R1,R2
VMBS
	ORI R0,>4000
	SWPB R0
VMBSRAW
	MOVB R0,@>8C02
	SWPB R0
	MOVB R0,@>8C02		* set address
	COC @BIT01,R2		* Check for odd length
	JNE VMBSLP			* jump to x2 loop if not odd
	MOVB R1,@>8C00		* copy once
	DEC R2				* count down
	JEQ VMBSEX			* jump to exit if done
VMBSLP
	MOVB R1,@>8C00		* write byte
	MOVB R1,@>8C00		* write second byte
	DECT R2				* count down
	JNE VMBSLP			* loop till finished
VMBSEX
	B *R11

**
* VDPWA - Write address or register
VDPWA
	SWPB R0
	MOVB R0,@>8C02
	SWPB R0
	MOVB R0,@>8C02		* write address
	B *R11  
	
**
* LOADRG - load regs list to VDP address, end on >0000 and 
* write >D0 (for sprites) (so second to last entry is write address for sprite table)
* address of table in R1 (destroyed)
LOADRG
LOADLP
	MOV *R1+,R0
	JEQ LDRDN
	SWPB R0
	MOVB R0,@>8C02
	SWPB R0
	MOVB R0,@>8C02
	JMP LOADLP
LDRDN
	LI R1,>D000
	MOVB R1,@>8C00
	B *R11

* wait r4 jiffies
delay
* This quit test copied from the console ROM
	LI R12,>0024 		* Load CRU
	LDCR @>0012,3
	SRC R12,7			* delay
	LI R12,>0006
	STCR R5,8 			* Fetch CRU
	CZC @QUITK,R5 		* QUIT key?
	JNE MENUKY
	BLWP @>0000			* reboot if yes
MENUKY
	clr r12				* test CRU VDP interface
	tb 2
	jeq delay
	movb @>8802,r12

	dec r4
	jne delay
	b *r11

***	
START
	LWPI >8300

* BITMAP - Setup for bitmap mode as a character display, all characters set to 0
* returns with video off - set VDP R1 to E2 to enable (>81E2)

* set display and disable sprites
	LI R1,BMREGS
	BL @LOADRG
	
* set up SIT - we just clear it to 0 (instead of the normal bitmap setup, 
* we are going to treat as a character display)
	LI R0,>1800
	CLR R1
	LI R2,768
	BL @VMBS

* first just need to initialize the space character to be black (color table only)
	li r0,>2000
	li r1,>1100
	li r2,8
	bl @vmbs

* Now load the SEGA character and color data into the middle table (includes a space)
	li r0,>800
	li r1,PAT0
	li r2,223*8
	bl @vmbw
	
	li r0,>2800
	li r1,COL0
	li r2,223*8
	bl @vmbw

* into the bottom table, we zero out the 'space' again but add some characters for
* the unlicense warning
	li r0,>3000
	li r1,>1100
	li r2,8
	bl @vmbs
	
	li r0,>1000+(64*8)
	li r1,PLIC64
	li r2,22*8
	bl @vmbw
	
	li r0,>3000+(64*8)
	li r1,CLIC64
	li r2,22*8
	bl @vmbw
	
* now we can turn the screen on
	li r0,>81E2
	bl @vdpwa
	
* brief pause before the logo
	li r4,>30
	bl @delay
	
* we're going to sort of sloppily scroll the sega logo down
* I'm just going to do it in four steps for simplicity
* SIT is at >1800, and we need to start at row 10, col 10
	li r3,>194A
	
	mov r3,r0
	li r1,md0+(3*32)
	li r2,12
	bl @vmbw
	
	li r4,4
	bl @delay
	
	mov r3,r0
	li r1,md0+(2*32)
	li r2,12
	bl @vmbw
	ai r0,32
	li r1,md0+(3*32)
	li r2,12
	bl @vmbw
	
	li r4,4
	bl @delay
	
	mov r3,r0
	li r1,md0+(1*32)
	li r2,12
	bl @vmbw
	ai r0,32
	li r1,md0+(2*32)
	li r2,12
	bl @vmbw
	ai r0,32
	li r1,md0+(3*32)
	li r2,12
	bl @vmbw
	
	li r4,4
	bl @delay
	
* now we're going to display the full frame 5 times with different
* animation frames, ending on the first one
	li r8,6
	li r7,md0-32

animlp
	mov r3,r0
	ai r7,32
	mov r7,r1
	li r2,12
	bl @vmbw
	ai r0,32
	ai r7,32
	mov r7,r1
	li r2,12
	bl @vmbw
	ai r0,32
	ai r7,32
	mov r7,r1
	li r2,12
	bl @vmbw
	ai r0,32
	ai r7,32
	mov r7,r1
	li r2,12
	bl @vmbw
	
* display our disclaimer, both as a delay and as a to-be-nice
	li r0,>1800+(22*32)
	li r1,LICTXT
	li r2,64
	bl @vmbw
	
	li r4,5
	bl @delay
	
	dec r8
	jeq anim3
	
	ci r8,2
	jne anim1
	li r7,md0+12-32		* final new frame, does not affect flags
anim1

	ci r8,1
	jne anim2
	li r7,md0-32	* back to first frame
anim2

	jmp animlp
anim3

* the copy is pretty darn fast for 24k, so to make the logo last a little
* longer, we'll just pause for a second or so
	li r4,90
	bl @delay
	
* now, we need to copy the EA5 executable into 32k RAM and jump to it
* it's going to be in paged cartridge memory, so we just need to copy
* three pages, we'll just hard code it and be done with it. This loop
* will execute from scratchpad.
	li r0,>8320		* target
	li r1,scratch	* source
cplp
	mov *r1+,*r0+	* copy code into scratchpad
	ci r1,scend
	jne cplp

	li r0,>6002		* page
	li r1,3			* number of pages
	li r2,2048		* size of page divided by 4 bytes
	li r3,>A000		* target
	li r6,>a000		* entry
	li r7,>6000		* base of cart space
	b @>8320
	
scratch
	mov r0,*r0+		* set the page and increment for next time
	mov r2,r4		* prepare count
	mov r7,r5		* source address
sclp
	mov *r5+,*R3+	* move the data
	mov *r5+,*R3+	* move the data
	dec r4
	jne sclp
	dec r1			* count down pages
	jne scratch 
	b *r6			* go execute
scend

	END
	
	

